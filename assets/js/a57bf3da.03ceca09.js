"use strict";(self.webpackChunkbifrost_documentation=self.webpackChunkbifrost_documentation||[]).push([[277],{8498:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var o=t(5893),i=t(1151);const s={},r="P2P",c={id:"concepts/p2p",title:"P2P",description:"Node-to-node communication is implemented using a custom protocol on top of raw TCP sockets. After some initial handshakes, the remainder of the communcation is performed over a multiplexer with dedicated channels for specific types of communication.",source:"@site/docs/concepts/p2p.md",sourceDirName:"concepts",slug:"/concepts/p2p",permalink:"/Bifrost/docs/current/concepts/p2p",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptsSidebar",previous:{title:"Ledger",permalink:"/Bifrost/docs/current/concepts/ledger"},next:{title:"RPC",permalink:"/Bifrost/docs/current/concepts/rpc"}},a={},d=[];function l(e){const n={code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"p2p",children:"P2P"}),"\n",(0,o.jsx)(n.p,{children:"Node-to-node communication is implemented using a custom protocol on top of raw TCP sockets. After some initial handshakes, the remainder of the communcation is performed over a multiplexer with dedicated channels for specific types of communication."}),"\n",(0,o.jsx)(n.p,{children:"The handshakes consist of:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Exchange a "Peer Identity" (a verification key)'}),"\n",(0,o.jsx)(n.li,{children:"Exchange network protocol version"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Assuming the latest network protocol version, a multiplexer is created with ports dedicated to, but not limited to:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The exchange of blocks"}),"\n",(0,o.jsx)(n.li,{children:"The exchange of transactions"}),"\n",(0,o.jsx)(n.li,{children:"The notification of block and transaction adoptions"}),"\n",(0,o.jsx)(n.li,{children:"The exchange of P2P participant information"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Each of these channels operate on a request-response model. Request messages are prefixed with a ",(0,o.jsx)(n.code,{children:"0"})," while response messages are prefixed with a ",(0,o.jsx)(n.code,{children:"1"}),". The entire message is framed together with its port number and sent over a shared TCP socket."]}),"\n",(0,o.jsxs)(n.p,{children:["Using the combination of multiplexer channels, a ",(0,o.jsx)(n.code,{children:"BlockchainPeerClient"})," is exposed providing higher-level interface to information from the remote peer. The ",(0,o.jsx)(n.code,{children:"BlockchainPeerClient"})," is provided to the actor-based blockchain network framework."]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>r});var o=t(7294);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);