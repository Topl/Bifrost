"use strict";(self.webpackChunkbifrost_documentation=self.webpackChunkbifrost_documentation||[]).push([[280],{1218:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=t(5893),r=t(1151);const o={},c="RPC",i={id:"concepts/rpc",title:"RPC",description:"Users interact with the blockchain using the Remote Procedure Call (RPC) layer.  This layer is implemented using gRPC using the specification defined in Topl/protobuf-specs.",source:"@site/docs/concepts/rpc.md",sourceDirName:"concepts",slug:"/concepts/rpc",permalink:"/Bifrost/docs/current/concepts/rpc",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"conceptsSidebar",previous:{title:"P2P",permalink:"/Bifrost/docs/current/concepts/p2p"}},a={},d=[];function l(e){const n={a:"a",code:"code",h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"rpc",children:"RPC"}),"\n",(0,s.jsxs)(n.p,{children:["Users interact with the blockchain using the Remote Procedure Call (RPC) layer.  This layer is implemented using gRPC using the specification defined in ",(0,s.jsx)(n.a,{href:"https://github.com/Topl/protobuf-specs",children:"Topl/protobuf-specs"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In general, the RPC layer is bound to host ",(0,s.jsx)(n.code,{children:"0.0.0.0"})," at port ",(0,s.jsx)(n.code,{children:"9084"}),". Only gRPC over HTTP/2 is supported directly by the node. To use gRPC-web, a separate proxy like Envoy should be used."]}),"\n",(0,s.jsxs)(n.p,{children:["The Node's gRPC layer is implemented using the interface provided by ",(0,s.jsx)(n.a,{href:"blockchain-core",children:"Blockchain Core"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Genus's gRPC layer is served using the same port. When running the (legacy) Node-embedded Genus, node traffic flows through the node interpreter while Genus traffic flows through Genus; but it's all served from the same JVM. When running Genus as a standalone server, node traffic is proxied to a remote node instance while Genus traffic is handled by the Genus server."})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>c});var s=t(7294);const r={},o=s.createContext(r);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);