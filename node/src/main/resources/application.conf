bifrost {
  // Settings for blockchain data
  data {
    // The _base_ directory in which blockchain data is stored
    directory = "/tmp/bifrost/data"
  }
  // Settings for staking
  staking {
    // The _base_ directory in which staking data/keys are stored
    directory = "/tmp/bifrost/staking"
  }
  // Settings for P2P networking
  p2p {
    // The local host/IP for binding at the OS-level to allow outside P2P connections
    bind-host = "0.0.0.0"
    // The local port for binding at the OS-level to allow outside P2P connections
    bind-port = 9085
    // The hostname to tell _other_ peers for inbound connections
    public-host = "localhost"
    // The port to tell _other_ peers for inbound connections
    public-port = 9085
    // A comma-delimited list of host:port pairs to connect to initially (i.e. `1.2.3.4:9085,5.6.7.8:9085`)
    known-peers = ""
    // Use actors system
    network-properties {
      legacy-network = false
      ping-pong-interval = 300 seconds
    }
  }
  // Settings for RPC/gRPC
  rpc {
    // The local host/IP for binding at the OS-level to allow outside gRPC connections
    bind-host = "0.0.0.0"
    // The local port for binding at the OS-level to allow outside gRPC connections
    bind-port = 9084
  }
  // Settings for the mempool
  mempool {
    // The maximum number of slots to retain a Transaction that fails to find its way into a block
    default-expiration-slots = 1000
  }
  // Settings for the big bang initialization
  big-bang {
    // Big-Bang configuration type (i.e. `private`)
    type = "private"
    // The timestamp (unix epoch ms) to use for the genesis block.  If not provided, will default to the current time (padded with a few seconds)
    // timestamp = 1678979124081
    // The number of stakers to create and register in the big bang block
    staker-count = 1
    // The 0-based index of this node out of `staker-count` (i.e. if `10` total stakers, `local-staker-index` may be `3`)
    local-staker-index = 0
    // The stake quantity to assign to each of the stakers.  If not provided, will default to uniform stake distribution.
    // stakes = ["500", "400", "300"]
  }
  // Settings of the protocol (consensus)
  protocols {
    // The _slot_ at which this protocol begins
    0 {
      f-effective = "15/100"
      vrf-ldd-cutoff = 50
      vrf-precision = 40
      vrf-baseline-difficulty = "1/20"
      vrf-amplitude = "1/2"
      chain-selection-k-lookback = 50
      slot-duration = 1000 milli
      forward-biased-slot-window = 50
      operational-periods-per-epoch = 2
      kes-key-hours = 9
      kes-key-minutes = 9
    }
  }
  // Settings for various cache instances in the application
  cache {
    parent-child-tree {
      maximum-entries = 512
    }
    slot-data {
      maximum-entries = 256
    }
    headers {
      maximum-entries = 128
    }
    bodies {
      maximum-entries = 128
    }
    transactions {
      maximum-entries = 128
    }
    spendable-box-ids {
      maximum-entries = 512
    }
    epoch-boundaries {
      maximum-entries = 16
    }
    operator-stakes {
      maximum-entries = 256
    }
    registrations {
      maximum-entries = 256
    }
    block-height-tree {
      maximum-entries = 256
    }
    eligibilities {
      maximum-entries = 256
    }
    epoch-data {
      maximum-entries = 32
    }
    registration-accumulator {
      maximum-entries = 256
    }
  }
  ntp {
    // The server to call to determine the NTP offset
    server = "pool.ntp.org"
    // How frequently should the NTP server be called
    refresh-interval = 30 minutes
    // How long to wait for a response from the NTP server
    // (If the NTP server takes a long time to respond, the result isn't particularly useful)
    timeout = 1 second
  }
}

genus {
  enable = true

  // The _base_ directory in which genus_db data is stored
  // optionally if OrientDB Studio was previously installed required, the genus_db storage should be a child of ¨database¨ folder
  // Example = "../../orientdb-community-3.2.18/databases/genus_db"
  // If an empty string is provided, the node's data directory will be used
  orient-db-directory = ""

  // see https://orientdb.com/docs/last/security/OrientDB-Security-Guide.html
  // By default, when a new database is created, three default roles and their respective users are created.
  // The roles are admin, reader, and writer. Three users are also created corresponding to each role: admin, reader, and writer.
  // A default password is also created for each user. The password is the same as the user's name (e.g., the admin user's password is set to admin).
  // Node application steps:
  //  - start orient-db server with credentials admin, admin
  //  - create db schemas
  //  - update user admin using password provided
  orient-db-password = "topl"
}

kamon {
  # Enable/disable monitoring
  enable = false

  environment.service = "bifrost"

  trace.join-remote-parents-with-same-span-id = yes
  metric.tick-interval = 60 seconds

  influxdb {
    hostname = "localhost"
    port = 8086
    database = "mydb"
  }
}
