bifrost {
  application {
    dataDir = ".bifrost/hel/data"
    keyFileDir = ".bifrost/hel/keyfiles"
    enablePBR = true
    enableTBR = true
    nodeKeys = []
    mempoolTimeout = 3h
    rebroadcastCount = 3
    cacheExpire = 1200000
    cacheSize = 50000
  }

  rpcApi {
    bindAddress = "0.0.0.0:9585"
    apiKeyHash = ""
    timeout = 30s
    verboseAPI = true
    namespaceSelector {
        topl = true
        util = true
        admin = true
        debug = true
    }
  }

  gjallarhorn {
    enableWallet = false
    clusterEnabled = false
    clusterHost = "127.0.0.1"
    clusterPort = 9087
  }

  network {
    nodeName = "Bifrost"
    agentName = "bifrost"
    applicationNameLimit = 50
    bindAddress = "0.0.0.0:9584"
    magicBytes = [66, 6, -66, -6]
    knownPeers = ["161.35.98.40:9584", "67.205.188.9:9584"]
    #declaredAddress =
    upnpEnabled = false
    upnpUseRandom = true
    upnpGatewayTimeout = 7s
    upnpDiscoverTimeout = 3s
    controllerTimeout = 5s
    handshakeTimeout = 5000ms
    getPeersInterval = 2m
    maxConnections = 20
    connectionTimeout = 1s
    deadConnectionTimeout = 10m
    deliveryTimeout = 10s
    maxDeliveryChecks = 40
    syncInterval = 10s
    syncIntervalStable = 20s
    syncTimeout = 5s
    syncStatusRefresh = 2m
    syncStatusRefreshStable = 4m
    maxPacketSize = 1048576
    maxHandshakeSize = 8096
    maxInvObjects = 512
    desiredInvObjects = 512
    maxModifiersCacheSize = 1024
    maxChainCacheDepth = 1024
    maxPeerSpecObjects = 64
    temporalBanDuration = 60m
    penaltySafeInterval = 5m
    penaltyScoreThreshold = 100
  }

  forging {
    blockGenerationDelay = 1 second
    minTransactionFee = 0
    forgeOnStartup = false
    #rewardsAddress =
    protocolVersions = [
      {
        version { value = 1.0.0 }
        startBlock = 0
        blockVersion = 1
        targetBlockTime = 10 seconds
        numTxPerBlock = 100
      }
    ]
  }

  ntp {
    server = "pool.ntp.org"
    updateEvery = 30m
    timeout = 30s
  }
}

akka {
  jvm-shutdown-hooks = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = on
  actor {
    debug {
      receive = off
      autoreceive = off
      unhandled = off
      lifecycle = off
      event-stream = off
    }
  }
}
