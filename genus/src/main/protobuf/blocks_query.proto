syntax = "proto3";

import "filters.proto";
import "types.proto";
import "services_types.proto";

package co.topl.genus.services;

service BlocksQuery {
  rpc Query (QueryBlocksReq) returns (QueryBlocksRes);

  rpc QueryStream (BlocksQueryStreamReq) returns (stream BlocksQueryStreamRes);
}

message BlockSorting {
  message Height {
    bool descending = 1;
  }

  message Timestamp {
    bool descending = 1;
  }

  message Difficulty {
    bool descending = 1;
  }

  message NumberOfTransactions {
    bool descending = 1;
  }

  oneof sort_by {
    Height height = 1;
    Timestamp timestamp = 2;
    Difficulty difficulty = 3;
    NumberOfTransactions number_of_transactions = 4;
  }
}

message QueryBlocksReq {
  BlockFilter filter = 1;
  BlockSorting sorting = 2;
  uint32 confirmation_depth = 3;
  Paging paging_options = 4;
}

message QueryBlocksRes {
  message Success {
    repeated Block blocks = 1;
  }

  message Failure {
    oneof reason {
      string data_store_connection_error = 1;
      string query_timeout = 2;
      string invalid_query = 3;
    }
  }

  oneof result {
    Success success = 1;
    Failure failure = 2;
  }
}

message BlocksQueryStreamReq {
  BlockFilter filter = 1;
  BlockSorting sorting = 2;
  uint32 confirmation_depth = 3;
}

message BlocksQueryStreamRes {
  message Failure {
    oneof reason {
      string data_store_connection_error = 1;
      string invalid_query = 2;
    }
  }

  oneof result {
    Block block = 1;
    Failure failure = 2;
  }
}
